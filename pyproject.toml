[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "enhanced-gptcache"
version = "0.1.0"
description = "GPTCache extension with context-chain filtering, PCA compression, and federated Ï„-tuning"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Enhanced Cache Team"}
]
keywords = ["llm", "cache", "gptcache", "machine-learning", "federated-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "gptcache>=0.1.43",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "faiss-cpu>=1.7.4",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "joblib>=1.3.0",
    "pyyaml>=6.0",
    "psutil>=5.9.0",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "jupyter>=1.0.0",
    "black>=23.0.0",
    "ruff>=0.0.280",
    "mypy>=1.5.0",
]

[project.scripts]
benchmark-cache = "benchmark.benchmark_runner:main"
generate-queries = "benchmark.generate_queries:main"
analyze-results = "benchmark.analyze_results:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing"
